{"ast":null,"code":"import axios from \"axios\";\nimport { DELETE_TODOS_FAILURE, DELETE_TODOS_REQUEST, DELETE_TODOS_SUCCESS, GET_TODOS_FAILURE, GET_TODOS_REQUEST, GET_TODOS_SUCCESS, POST_TODOS_FAILURE, POST_TODOS_REQUEST, POST_TODOS_SUCCESS } from \"../constants/todosConstant\"; // make a action to gets all todos\n\nexport const getAllTodos = async dispatch => {\n  dispatch({\n    type: GET_TODOS_REQUEST\n  });\n\n  try {\n    const res = await axios.get(process.env.REACT_APP_API_BASE_URL + \"/api/v1/todos-all\");\n    dispatch({\n      type: GET_TODOS_SUCCESS,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_TODOS_FAILURE,\n      payload: error\n    });\n  }\n}; // make a action to create a todo\n\nexport const createTodo = payload => async dispatch => {\n  dispatch({\n    type: POST_TODOS_REQUEST\n  });\n\n  try {\n    const res = await axios.post(process.env.REACT_APP_API_BASE_URL + \"/api/v1/todo/new\", {\n      title: payload.todoTitle,\n      description: payload.todoDescription\n    });\n    dispatch({\n      type: POST_TODOS_SUCCESS,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch({\n      type: POST_TODOS_FAILURE,\n      payload: error\n    });\n  }\n}; // make a action to delete a todo\n\nexport const deleteTodo = payload => async dispatch => {\n  dispatch({\n    type: DELETE_TODOS_REQUEST\n  });\n\n  try {\n    const res = await axios.delete(process.env.REACT_APP_API_BASE_URL + \"/api/v1/todo/\" + payload.todoId);\n    dispatch({\n      type: DELETE_TODOS_SUCCESS,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch({\n      type: DELETE_TODOS_FAILURE,\n      payload: error\n    });\n  }\n};","map":{"version":3,"names":["axios","DELETE_TODOS_FAILURE","DELETE_TODOS_REQUEST","DELETE_TODOS_SUCCESS","GET_TODOS_FAILURE","GET_TODOS_REQUEST","GET_TODOS_SUCCESS","POST_TODOS_FAILURE","POST_TODOS_REQUEST","POST_TODOS_SUCCESS","getAllTodos","dispatch","type","res","get","process","env","REACT_APP_API_BASE_URL","payload","data","error","createTodo","post","title","todoTitle","description","todoDescription","deleteTodo","delete","todoId"],"sources":["D:/To do app using MERN/Complete-MERN-TODO-Application/todo-fronted/src/redux/actions/todosAction.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { DELETE_TODOS_FAILURE, DELETE_TODOS_REQUEST, DELETE_TODOS_SUCCESS, GET_TODOS_FAILURE, GET_TODOS_REQUEST, GET_TODOS_SUCCESS, POST_TODOS_FAILURE, POST_TODOS_REQUEST, POST_TODOS_SUCCESS } from \"../constants/todosConstant\";\r\n\r\n// make a action to gets all todos\r\nexport const getAllTodos = async (dispatch) => {\r\n  dispatch({ type: GET_TODOS_REQUEST });\r\n\r\n  try {\r\n    const res = await axios.get(process.env.REACT_APP_API_BASE_URL + \"/api/v1/todos-all\");\r\n    dispatch({ type: GET_TODOS_SUCCESS, payload: res.data });\r\n  } catch (error) {\r\n    dispatch({ type: GET_TODOS_FAILURE, payload: error });\r\n  }\r\n};\r\n\r\n// make a action to create a todo\r\nexport const createTodo = (payload) => async (dispatch) => {\r\n  dispatch({ type: POST_TODOS_REQUEST });\r\n\r\n  try {\r\n    const res = await axios.post(process.env.REACT_APP_API_BASE_URL + \"/api/v1/todo/new\", {\r\n      title: payload.todoTitle,\r\n      description: payload.todoDescription,\r\n    });\r\n    dispatch({ type: POST_TODOS_SUCCESS, payload: res.data });\r\n  } catch (error) {\r\n    dispatch({ type: POST_TODOS_FAILURE, payload: error });\r\n  }\r\n};\r\n\r\n// make a action to delete a todo\r\nexport const deleteTodo = (payload) => async (dispatch) => {\r\n  dispatch({ type: DELETE_TODOS_REQUEST });\r\n\r\n  try {\r\n    const res = await axios.delete(process.env.REACT_APP_API_BASE_URL + \"/api/v1/todo/\" + payload.todoId);\r\n    dispatch({ type: DELETE_TODOS_SUCCESS, payload: res.data });\r\n  } catch (error) {\r\n    dispatch({ type: DELETE_TODOS_FAILURE, payload: error });\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,oBAAT,EAA+BC,oBAA/B,EAAqDC,oBAArD,EAA2EC,iBAA3E,EAA8FC,iBAA9F,EAAiHC,iBAAjH,EAAoIC,kBAApI,EAAwJC,kBAAxJ,EAA4KC,kBAA5K,QAAsM,4BAAtM,C,CAEA;;AACA,OAAO,MAAMC,WAAW,GAAG,MAAOC,QAAP,IAAoB;EAC7CA,QAAQ,CAAC;IAAEC,IAAI,EAAEP;EAAR,CAAD,CAAR;;EAEA,IAAI;IACF,MAAMQ,GAAG,GAAG,MAAMb,KAAK,CAACc,GAAN,CAAUC,OAAO,CAACC,GAAR,CAAYC,sBAAZ,GAAqC,mBAA/C,CAAlB;IACAN,QAAQ,CAAC;MAAEC,IAAI,EAAEN,iBAAR;MAA2BY,OAAO,EAAEL,GAAG,CAACM;IAAxC,CAAD,CAAR;EACD,CAHD,CAGE,OAAOC,KAAP,EAAc;IACdT,QAAQ,CAAC;MAAEC,IAAI,EAAER,iBAAR;MAA2Bc,OAAO,EAAEE;IAApC,CAAD,CAAR;EACD;AACF,CATM,C,CAWP;;AACA,OAAO,MAAMC,UAAU,GAAIH,OAAD,IAAa,MAAOP,QAAP,IAAoB;EACzDA,QAAQ,CAAC;IAAEC,IAAI,EAAEJ;EAAR,CAAD,CAAR;;EAEA,IAAI;IACF,MAAMK,GAAG,GAAG,MAAMb,KAAK,CAACsB,IAAN,CAAWP,OAAO,CAACC,GAAR,CAAYC,sBAAZ,GAAqC,kBAAhD,EAAoE;MACpFM,KAAK,EAAEL,OAAO,CAACM,SADqE;MAEpFC,WAAW,EAAEP,OAAO,CAACQ;IAF+D,CAApE,CAAlB;IAIAf,QAAQ,CAAC;MAAEC,IAAI,EAAEH,kBAAR;MAA4BS,OAAO,EAAEL,GAAG,CAACM;IAAzC,CAAD,CAAR;EACD,CAND,CAME,OAAOC,KAAP,EAAc;IACdT,QAAQ,CAAC;MAAEC,IAAI,EAAEL,kBAAR;MAA4BW,OAAO,EAAEE;IAArC,CAAD,CAAR;EACD;AACF,CAZM,C,CAcP;;AACA,OAAO,MAAMO,UAAU,GAAIT,OAAD,IAAa,MAAOP,QAAP,IAAoB;EACzDA,QAAQ,CAAC;IAAEC,IAAI,EAAEV;EAAR,CAAD,CAAR;;EAEA,IAAI;IACF,MAAMW,GAAG,GAAG,MAAMb,KAAK,CAAC4B,MAAN,CAAab,OAAO,CAACC,GAAR,CAAYC,sBAAZ,GAAqC,eAArC,GAAuDC,OAAO,CAACW,MAA5E,CAAlB;IACAlB,QAAQ,CAAC;MAAEC,IAAI,EAAET,oBAAR;MAA8Be,OAAO,EAAEL,GAAG,CAACM;IAA3C,CAAD,CAAR;EACD,CAHD,CAGE,OAAOC,KAAP,EAAc;IACdT,QAAQ,CAAC;MAAEC,IAAI,EAAEX,oBAAR;MAA8BiB,OAAO,EAAEE;IAAvC,CAAD,CAAR;EACD;AACF,CATM"},"metadata":{},"sourceType":"module"}